# Important errors are sent to console.error.  Use DEBUG to enable or
# disable (-) verbose logging.  Namespaces: fio, express, sequelize, etc..
# See https://www.npmjs.com/package/debug
#
# (development)
# DEBUG="*,-send*,-express*,-sequelize*,-body-parser*,-babel,-vue*"
#
# (production)
DEBUG="fio:*"

# Used in checkout, and admin invite, etc
TITLE="FIO Address Registration"

CHAIN_ENDPOINT=https://testnet.fioprotocol.io/v1/chain

# (optional) Include in production or if you want to require a specific CHAIN_ID
#CHAIN_ID=21dcae42c0182200e93f954a074011f9048a7624c6fe81d3c9541a614a88bd1c

# The Admin interface allows for a 0 account price.  Block free accounts
# if this server is not forked and implemented for this.
MIN_ADDRESS_PRICE=0

# Crypto payment provider
# (REQUIRED)
PLUGIN_PAYMENT=coinbase
COINBASE_API_KEY=
COINBASE_WEBHOOK_SECRET=

# Always use In-app checkout (true) or only when required (false). In-app
# may be used even when (false) if plugin does not provide forward_url.
# (DEFAULT) true
PAYMENT_INAPP=true

# Email send only service or server.  The sendmail plug-in is a working
# email server it will not run fast (no queue) and will not attempt
# re-delivery.
PLUGIN_EMAIL=sendmail
EMAIL_FROM=no-reply@yourdomain.com

# Alternative PLUGIN_EMAIL (use only 1 email plugin)
# SMTP Client (Tested with AWS/SES Simple Email Service)
# Provide a NODEMAILER_URL (OR) NODEMAILER_OPTIONS
# Example: NODEMAILER_URL=url: smtps://username:password@smtp.example.com
# See https://nodemailer.com/smtp/
#PLUGIN_EMAIL=nodemailer
#EMAIL_FROM=user@example.com
#NODEMAILER_URL=
#NODEMAILER_OPTIONS=

# Only enable one email plugin
#PLUGIN_EMAIL=sendgrid
#SENDGRID_API_KEY=SG.
#EMAIL_FROM=

# Admin wallet logo uploads..
# Optional plugin for hosted uploaded logos.  If running on a non-persisted
# partition like an unmounted docker, disable by commenting out or provide
# another upload plugin for your environment.  Users can provide a URL.
# (OPTIONAL)
PLUGIN_UPLOAD=disk
UPLOAD_DISK_FOLDER=test

# Use Amazon S3 Bucket instead of "disk"
#PLUGIN_UPLOAD=s3
# (REQUIRED)
#S3_BUCKET=
# (OPTIONAL) specify or use SDK's auto-config
#S3_ACCESS_KEY=
# (OPTIONAL) specify or use SDK's auto-config
#S3_SECRET_KEY=

# If a SECRET does not require any special format, secret-gen.js may be used
# to create new secrets:
# node ./server/secret-gen.js

# Some fields in the database are encrypted. Changing this will in-validate all
# encrypted data in the database. Needs to be very strong. No special encoding..
# (REQUIRED)
DATABASE_ENCRYPT_SECRET=

# Changing this will in-validate all logins.  Needs to be very strong.
# No special encoding..
# (REQUIRED)
SERVER_AUTH_STATE_SECRET=

# (OPTIONAL) default 10 per ip and login
# LOGIN_ATTEMPTS_PER_HOUR=10

# Embedded in the 2 factor authentication QR Code
TWOFA_SERVICE=FIO Registration Server

# A Postgres URL with authentication.
# Example: heroku addons:create heroku-postgresql:hobby-dev --version=9.6
DATABASE_URL=postgres://username:password@localhost/databaes-name

# Timeout when sending webhook events.  Webhook recipients should be fast.
# The webhook event will re-try if it fails or does not receive a successful
# reply status code.
WEBHOOK_TIMOUT=3000

# Private key with funds, used to pay for new domains and addresses.
# WIF Wallet Import Format: 5K... or 5J...
WALLET_PRIVATE_KEY=

# Used if the URL does not contain a referral code
DEFAULT_REFERRAL_CODE=fio

# First Admin login.  You'll need one login to get things going.
# (REQUIRED) (add your own password)
DEFAULT_USER='{"username": "fio", "email": "user@example.com", "password": ""}'

# Check on payments, new registrations, and send webhook events (milliseconds)
PROCESS_EVENTS_MS=10000

# Enable if your server is behind a proxy.
# https://expressjs.com/en/guide/behind-proxies.html
TRUST_PROXY=false
# Alternate header for X-Forwarded-For, optional
IP_HEADER_PROP_NAME=

# Starts using and allows checking of stronger password hashing but incurs
# overhead when checking passwords on the server.  Increase with caution.
BCRYPT_MAX_ROUNDS=10

# Inbound HTTPS connection for development.  Start ngrok in a new window and
# configure coinbase webhook endpoint each time unless a stable NGROK_SUBDOMAIN
# is available.
# (OPTIONAL)
# NGROK_SUBDOMAIN=

# Geetest ID and Key
GEETEST_ID=
GEETEST_KEY=
GEETEST_CAPTCHA_SKIP=

# Slack notifications
SLACK_WEBHOOK_URL=

# Discord notifications
DISCORD_WEBHOOK_ID=
DISCORD_WEBHOOK_TOKEN=

